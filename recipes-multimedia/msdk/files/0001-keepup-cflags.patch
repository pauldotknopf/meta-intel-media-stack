--- a/builder/FindGlobals.cmake
+++ b/builder/FindGlobals.cmake
@@ -94,15 +94,14 @@
 
   set(warnings "-Wall -Wformat -Wformat-security -Wnon-virtual-dtor")
 
-  set(CMAKE_C_FLAGS   "-pipe -fPIC ${warnings} ${no_warnings}")
-  set(CMAKE_CXX_FLAGS "-pipe -fPIC ${warnings} ${no_warnings}")
+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)
   append("-fPIE -pie" CMAKE_EXEC_LINKER_FLAGS)
 
   # CACHE + FORCE should be used only here to make sure that this parameters applied globally
-  set(CMAKE_C_FLAGS_DEBUG     "-O0 -g -D_DEBUG" CACHE STRING "" FORCE)
-  set(CMAKE_C_FLAGS_RELEASE   "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector -DNDEBUG"    CACHE STRING "" FORCE)
-  set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -g -D_DEBUG" CACHE STRING "" FORCE)
-  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector -DNDEBUG"    CACHE STRING "" FORCE)
+  set(CMAKE_C_FLAGS_DEBUG     "${CMAKE_C_FLAGS_DEBUG} -Wall ${no_warnings}  -Wformat -Wformat-security -g -D_DEBUG" CACHE STRING "" FORCE)
+  set(CMAKE_C_FLAGS_RELEASE   "${CMAKE_C_FLAGS_RELEASE} -O2 -D_FORTIFY_SOURCE=2 -fstack-protector -Wall ${no_warnings} -Wformat -Wformat-security -DNDEBUG"    CACHE STRING "" FORCE)
+  set(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} -Wall ${no_warnings}  -Wformat -Wformat-security -g -D_DEBUG" CACHE STRING "" FORCE)
+  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2 -D_FORTIFY_SOURCE=2 -fstack-protector -Wall ${no_warnings}  -Wformat -Wformat-security -DNDEBUG"    CACHE STRING "" FORCE)
 
   if ( Darwin )
     if (CMAKE_C_COMPILER MATCHES clang)
--- a/api/opensource/mfx_dispatch/CMakeLists.txt
+++ b/api/opensource/mfx_dispatch/CMakeLists.txt
@@ -86,13 +86,14 @@
 
   set(no_warnings "-Wno-unknown-pragmas -Wno-unused")
 
-  set(CMAKE_CXX_FLAGS "-pipe -fPIC -std=c++11")
-  set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -Wall ${no_warnings} -Wformat -Wformat-security -g -D_DEBUG")
-  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector -Wall ${no_warnings} -Wformat -Wformat-security  -DNDEBUG")
+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+  set (CMAKE_CXX_STANDARD 11)
+  set(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} -O0 -Wall ${no_warnings} -Wformat -Wformat-security -g")
+  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2 -D_FORTIFY_SOURCE=2 -fstack-protector -Wall ${no_warnings} -Wformat -Wformat-security")
 
-  if (DEFINED CMAKE_FIND_ROOT_PATH)
-    append("--sysroot=${CMAKE_FIND_ROOT_PATH} " LINK_FLAGS)
-  endif (DEFINED CMAKE_FIND_ROOT_PATH)
+#  if (DEFINED CMAKE_FIND_ROOT_PATH)
+#    append("--sysroot=${CMAKE_FIND_ROOT_PATH} " LINK_FLAGS)
+#  endif (DEFINED CMAKE_FIND_ROOT_PATH)
 endif( )
 
 include_directories (
